// <auto-generated />
using System;
using MeerkatDHCP.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeerkatDHCP.Database.Migrations
{
    [DbContext(typeof(DhcpDbContext))]
    [Migration("20250722223601_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("MeerkatDHCP.Database.AddressLease", b =>
                {
                    b.Property<string>("IpAddress")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("AcknowledgedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientIdentifier")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("DeclinedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("HardwareAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("LastUpdate")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("ReleasedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ScopeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IpAddress");

                    b.HasIndex("ScopeName");

                    b.ToTable("Leases");
                });

            modelBuilder.Entity("MeerkatDHCP.Database.AddressReservation", b =>
                {
                    b.Property<string>("HardwareAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("IpAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("ScopeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("HardwareAddress", "IpAddress");

                    b.HasIndex("ScopeName");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("MeerkatDHCP.Database.RequestLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("ClientIpAddress")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<ushort>("Flags")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("GatewayIpAddress")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte>("HardwareLength")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("HardwareType")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Hops")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Operation")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Options")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<ushort>("Seconds")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("ServerIpAddress")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("ServerName")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<uint>("TransactionId")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("YourIpAddress")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("RequestLogs");
                });

            modelBuilder.Entity("MeerkatDHCP.Database.Scope", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Dns1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Dns2")
                        .HasColumnType("TEXT");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Gateway")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("LastUpdate")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<uint>("LeaseTimeInSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Network")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Scopes");
                });

            modelBuilder.Entity("MeerkatDHCP.Database.AddressLease", b =>
                {
                    b.HasOne("MeerkatDHCP.Database.Scope", "Scope")
                        .WithMany("Leases")
                        .HasForeignKey("ScopeName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scope");
                });

            modelBuilder.Entity("MeerkatDHCP.Database.AddressReservation", b =>
                {
                    b.HasOne("MeerkatDHCP.Database.Scope", "Scope")
                        .WithMany("Reservations")
                        .HasForeignKey("ScopeName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scope");
                });

            modelBuilder.Entity("MeerkatDHCP.Database.Scope", b =>
                {
                    b.Navigation("Leases");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
